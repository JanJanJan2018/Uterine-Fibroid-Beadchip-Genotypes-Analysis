predKNN <- predict(knnMod, testingSet)
predRPART <- predict(rpartMod, testingSet)
predGLM <- GLMpred
length=length(testingSet$Type)
sumKNN <- sum(predKNN==testingSet$Type)
sumRPart <- sum(predRPART==testingSet$Type)
sumGLM <- sum(predGLM==testingSet$Type)
accuracy_KNN <- sumKNN/length
accuracy_RPART <- sumRPart/length
accuracy_GLM <- sumGLM/length
predDF2 <- data.frame(predRF,predKNN,predRPART,predGLM,
TYPE=testingSet$Type)
colnames(predDF2) <- c('RandomForest','KNN','Rpart','GLM','TrueValue')
results <- c(round(accuracy_rfMod,2),
round(accuracy_KNN,2),
round(accuracy_RPART,2),
round(accuracy_GLM,2),
round(100,2))
results <- as.factor(results)
results <- t(data.frame(results))
colnames(results) <- c('RandomForest','KNN','Rpart','GLM','TrueValue')
Results <- rbind(predDF2, results)
Results
keysNames <- paste(keys$Symbol,keys$SEQUENCE, sep='_')
keys0 <- keys[,-(1:2)]
keys_ml <- as.data.frame(t(keys0))
colnames(keys_ml) <- keysNames
keys_ml$Type <- as.factor(c(rep('UL',length(grep('^UL_',row.names(keys_ml)))),
rep('nonUL',length(grep('^nonUL_',row.names(keys_ml))))))
keys_ml0 <- keys_ml[,c(88,1:87)]
write.csv(keys_ml0, 'ml_ready_UL_classes.csv',row.names=TRUE)
names <- (beadArrays$Symbol)
beadArrays1 <- beadArrays[,-1]
beadArrays_ML <- as.data.frame(t(beadArrays1))
colnames(beadArrays_ML) <- names
beadArrays_ML$Type <- as.factor(c(rep('UL_bead',20), rep('nonUL_bead',18),
rep('UL_array',3), rep('nonUL_array',3)))
beadArrays_ML2 <- beadArrays_ML[,c(13,1:12)]
names <- keys2$Symbol
keys_2 <- keys2[,-1]
keys_t <- as.data.frame(t(keys_2))
colnames(keys_t) <- names
keys_t$Type <- keys_ml$Type
keys_ML <- keys_t[,c(21,1:20)]
library(RMariaDB)
View(All_stats_only)
write.csv(stats_all, 'UL_nonUL_beadchip_stats.csv', row.names=FALSE)
setwd("C:/Users/m/Desktop/MySQL-RStudio-RMariaDB")
localuserpassword <- 'Miss12345$'
UL_data <- read.csv('UL_nonUL_beadchip_stats.csv', sep=',', header=TRUE, na.strings=c('',' ','NA'))
library(RMariaDB)
storiesDb <- dbConnect(RMariaDB::MariaDB(),
user='newspaper_search_results_user',
password=localuserpassword,
dbname='newspaper_search_results',
host='localhost')
dbListTables(storiesDb)
query1 <- "CREATE DATABASE UL_data;"
print(query1)
rsInsert <- dbSendQuery(storiesDb, query1)
rootpw <- 'miss1234'
storiesDb <- dbConnect(RMariaDB::MariaDB(),
user='root',
password=rootpw,
dbname='newspaper_search_results',
host='localhost')
dbListTables(storiesDb)
print(query1)
rsInsert <- dbSendQuery(storiesDb, query1)
dbClearResult(rsInsert)
dbDisconnect(storiesDb)
storiesDb <- dbConnect(RMariaDB::MariaDB(),
user='root',
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(storiesDb)
query2 <- "USE ul_data;"
print(query2)
rsInsert <- dbSendQuery(storiesDb, query2)
user='root'
View(UL_data)
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
# Clear the result.
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
dbClearResult(rsInsert)
dbDisconnect(ULsDb)
colnames(UL_data)
query3 <- "CREATE TABLE ULsDb.UL_data (
SEQUENCE CHAR(99)
SYMBOL CHAR(15)
GENE_COUNT INT
UL_MEAN FLOAT
UL_MEDIAN FLOAT
UL_MAX FLOAT
UL_MIN FLOAT
UL_SE FLOAT
nonUL_MEAN FLOAT
nonUL_MEDIAN FLOAT
nonUL_MAX FLOAT
nonUL_MIN FLOAT
nonUL_SE FLOAT
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
PRIMARY KEY (SYMBOL);
)"
print(query3)
rsInsert <- dbSendQuery(ULsDb, query3)
dbClearResult(rsInsert)
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
rsInsert <- dbSendQuery(ULsDb, query2)
dbClearResult(rsInsert)
query3 <- "CREATE TABLE ULsDb.UL_data (
SEQUENCE CHAR(99)
SYMBOL CHAR(15)
GENE_COUNT INT
UL_MEAN FLOAT
UL_MEDIAN FLOAT
UL_MAX FLOAT
UL_MIN FLOAT
UL_SE FLOAT
nonUL_MEAN FLOAT
nonUL_MEDIAN FLOAT
nonUL_MAX FLOAT
nonUL_MIN FLOAT
nonUL_SE FLOAT
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
PRIMARY KEY (SYMBOL);
)"
print(query3)
rsInsert <- dbSendQuery(ULsDb, query3)
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
# Clear the result.
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
# Clear the result.
dbClearResult(rsInsert)
query3 <- "CREATE TABLE ul_data.ul_data2 (
SEQUENCE CHAR(99),
SYMBOL CHAR(15),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT,
PRIMARY KEY (SYMBOL));"
print(query3)
rsInsert <- dbSendQuery(ULsDb, query3)
dbClearResult(rsInsert)
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
# Clear the result.
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
dbClearResult(rsInsert)
# rename our connection from storiesDb to ULsDb
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
# Clear the result.
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
dbClearResult(rsInsert)
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data1", append = TRUE )
dbClearResult(rsInsert)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
dbClearResult(rsInsert)
query2 <- "USE ul_data1;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
#Optional. Prints out the query in case you need to troubleshoot it.
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data1", append = TRUE )
UL_data <- read.csv('UL_nonUL_beadchip_stats.csv', sep=',',header=TRUE, na.strings=c('',' ','NA'))
colnames(UL_data) <- c("SEQUENCE",
"SYMBOL",
"GENE_COUNT",
"UL_MEAN",
"UL_MEDIAN",
"UL_MAX",
"UL_MIN",
"UL_SE",
"nonUL_MEAN",
"nonUL_MEDIAN",
"nonUL_MAX",
"nonUL_MIN",
"nonUL_SE",
"FOLDCHANGE_MEAN_UL_to_nonUL")
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data1", append = TRUE )
dbClearResult(rsInsert)
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
print(query2)
# Execute the query on the storiesDb that we connected to above.
rsInsert <- dbSendQuery(ULsDb, query2)
query4 <- "CREATE TABLE ul_data.ul_data2 (
SEQUENCE CHAR(99),
SYMBOL CHAR(15),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT,
);"
print(query4)
rsInsert <- dbSendQuery(ULsDb, query4)
query4 <- "CREATE TABLE ul_data.ul_data2 (
SEQUENCE CHAR(99),
SYMBOL CHAR(15),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
rsInsert <- dbSendQuery(ULsDb, query4)
query4 <- "CREATE TABLE ul_data.ul_data3 (
SEQUENCE CHAR(99),
SYMBOL CHAR(15),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
print(query4)
rsInsert <- dbSendQuery(ULsDb, query4)
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data3", append = TRUE )
dbClearResult(rsInsert)
query4 <- "CREATE TABLE ul_data.ul_data4 (
SEQUENCE CHAR(99),
SYMBOL CHAR(25),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
print(query4)
rsInsert <- dbSendQuery(ULsDb, query4)
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data4", append = TRUE )
dbDisconnect(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
dbClearResult(rsInsert)
query2 <- "USE ul_data;"
query2 <- "USE ul_data;"
rsInsert <- dbSendQuery(ULsDb, query2)
query5 <- "DELETE ul_data1,ul_data2,ul_data3;"
rsInsert <- dbSendQuery(ULsDb, query5)
dbClearResult(rsInsert)
query5 <- "DELETE TABLE ul_data.ul_data1;"
rsInsert <- dbSendQuery(ULsDb, query5)
query5 <- "DROP TABLE ul_data.ul_data1;"
rsInsert <- dbSendQuery(ULsDb, query5)
dbClearResult(rsInsert)
dbListTables(ULsDb)
query6 <- "DROP TABLE ul_data.ul_data2;"
query7 <- "DROP TABLE ul_data.ul_data3;"
rsInsert <- dbSendQuery(ULsDb, query6)
dbDisconnect(ULsDb)
rsInsert <- dbSendQuery(ULsDb, query7)
dbDisconnect(ULsDb)
dbListTables(ULsDb)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
query7 <- "DROP TABLE ul_data.ul_data3;"
rsInsert <- dbSendQuery(ULsDb, query7)
dbListTables(ULsDb)
library(RMariaDB)
rootpw <- 'miss1234'
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
user='root'
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='UL_data',
host='localhost')
rmariadb.settingsfile <- "newspaper_search_results.cnf.txt"
storiesDb <- dbConnect(RMariaDB::MariaDB(),
user=user,
password=rootpw,
dbname='newspaper_search_results',
host='localhost')
library(RMariaDB)
library(tidyverse)
library(DT)
library(stringr)
UL_data <- read.csv('UL_nonUL_beadchip_stats.csv', sep=',',header=TRUE, na.strings=c('',' ','NA'))
colnames(UL_data) <- c("SEQUENCE",
"SYMBOL",
"GENE_COUNT",
"UL_MEAN",
"UL_MEDIAN",
"UL_MAX",
"UL_MIN",
"UL_SE",
"nonUL_MEAN",
"nonUL_MEDIAN",
"nonUL_MAX",
"nonUL_MIN",
"nonUL_SE",
"FOLDCHANGE_MEAN_UL_to_nonUL")
head(UL_data,30)
pretty_headers <- str_to_title(colnames(UL_data))
UL_data1 <- datatable(data=UL_data,  rownames=FALSE,
colnames=pretty_headers,
filter=list(position='top'),
options=list(
dom='Bfrtip',
buttons=c('colvis','csv','excel'),
language=list(sSearch='Filter:')),
extensions=c('Buttons','Responsive')
)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user='newuser',
password='2020mystery$',
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
query <- "CREATE TABLE ul_data.ul_data (
SEQUENCE CHAR(99),
SYMBOL CHAR(25),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
rsInsert <- dbSendQuery(ULsDb, query)
query <- "CREATE TABLE ul_data.ul_data (
SEQUENCE CHAR(99),
SYMBOL CHAR(25),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
rsInsert <- dbSendQuery(ULsDb, query)
ULsDb <- dbConnect(RMariaDB::MariaDB(),
user='newuser',
password='2020mystery$',
dbname='UL_data',
host='localhost')
dbListTables(ULsDb)
query <- "CREATE TABLE ul_data.ul_data (
SEQUENCE CHAR(99),
SYMBOL CHAR(25),
GENE_COUNT INT,
UL_MEAN FLOAT,
UL_MEDIAN FLOAT,
UL_MAX FLOAT,
UL_MIN FLOAT,
UL_SE FLOAT,
nonUL_MEAN FLOAT,
nonUL_MEDIAN FLOAT,
nonUL_MAX FLOAT,
nonUL_MIN FLOAT,
nonUL_SE FLOAT,
FOLDCHANGE_MEAN_UL_to_nonUL FLOAT
);"
rsInsert <- dbSendQuery(ULsDb, query)
dbClearResult(rsInsert)
#write the csv data from the UL_data file into the ul_data SQL table
dbWriteTable(ULsDb, value = UL_data, row.names = FALSE, name = "ul_data", append = TRUE )
query <- "select SEQUENCE,SYMBOL,GENE_COUNT,FOLDCHANGE_MEAN_UL_to_nonUL FROM ul_data.ul_data
WHERE( FOLDCHANGE_MEAN_UL_to_nonUL > 1.5 AND GENE_COUNT>2)
ORDER BY GENE_COUNT DESC,FOLDCHANGE_MEAN_UL_to_nonUL DESC LIMIT 30;"
rs = dbSendQuery(ULsDb,query)
dbRows<-dbFetch(rs)
dbRows
dbClearResult(rsInsert)
dbListTables(ULsDb)
dbClearResult(rsInsert)
query <- "DROP TABLE ul_data.ul_data;"
rsInsert <- dbSendQuery(ULsDb, query)
dbClearResult(rsInsert)
dbDisconnect(storiesDb)
start(1928,4)
